// Input: nums = [4,14,2]
// Output: 6
// Explanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just showing the four bits relevant in this case).
// The answer will be:
// HammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.

class Solution {
public:
    int totalHammingDistance(vector<int>& nums) {
        // 总共汉明距离 = 每一位上 cnt0 * cnt1
        
        int size = nums.size();
        int res = 0;
        
        for (int i = 0; i < 32; i++) {
            int cnt1 = 0;
            
            for (int num : nums) {
                if (num & (1<<i)) {
                    cnt1++;
                }
            }
            
            res += cnt1 * (size - cnt1);
        }
        
        return res;
    }
};

//  4:  0 1 0 0
// 14:  1 1 1 0
//  2:  0 0 1 0

//      2 2 2 0
