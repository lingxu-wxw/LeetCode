// Input: nums = [1,2,1]
// Output: [2,-1,2]
// Explanation: The first 1's next greater number is 2; 
// The number 2 can't find next greater number. 
// The second 1's next greater number needs to search circularly, which is also 2.

class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
        int size = nums.size();
        
        // stack当中存还没有找到next greater的idx
        stack<int> stack;
        vector<int> res(size, -1);
        
        // 遍历两倍的nums来体现循环
        for (int i = 0; i < 2*size; i++) {
            int num = nums[i % size];
            
            // 以新的num作为next greater
            while (!stack.empty() && nums[stack.top()] < num) {
                res[stack.top()] = num;
                stack.pop();
            }
            
            // idx入栈
            if (i < size) {
                stack.push(i);
            }
        }
        
        return res;
    }
};
