// Input: nums = [3,1,5,8]
// Output: 167
// Explanation:
// nums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> []
// coins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167

class Solution {
public:
    int maxCoins(vector<int>& nums) {
        int size = nums.size();
        
        // 数组头尾添加1
        nums.insert(nums.begin(),1);
        nums.push_back(1);
        
        // dp[i][j]表示i~j的气球全部打爆得到的最高分
        vector<vector<int>> dp(size+2, vector<int>(size+2, 0));
        
        for (int len = 1; len <= size; len++) {
            for (int i = 1; i <= size-len+1; i++) {
                int j = i + len - 1;
                // k指dp[i][j]中最后一个打掉的气球
                for (int k = i; k <= j; k++) {
                    // 转移方程
                    dp[i][j] = max(dp[i][j], dp[i][k-1] + dp[k+1][j] + nums[i-1]*nums[k]*nums[j+1]);
                }
            }
        }
        
        return dp[1][size];
    }
};
