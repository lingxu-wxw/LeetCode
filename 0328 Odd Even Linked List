/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    //  1 - 2 - 3 - 4 - 5 - 6 - 7
    // odd even
    //  1 - 3 - 2 - 4 - 5 - 6 - 7
    //     odd     even
    //  1 - 3 - 5 - 2 - 4 - 6 - 7
    //         odd         even
    
    ListNode* oddEvenList(ListNode* head) {
        if (!head || !head->next) return head;
        
        // odd指向当前已经处理完的最后一个（原）奇结点
        // even指向当前已经处理完的最后一个（原）偶结点
        ListNode *odd = head, *even = head->next;
        
        while (even && even->next) {
            ListNode* tmp = odd->next;
            odd->next = even->next;
            even->next = even->next->next;
            odd->next->next = tmp;
            odd = odd->next;
            even = even->next;
        }
        
        return head;
    }
};
