class Solution {
public:
    
    // Input: nums = [1,2,3]
    // Output:
    // [
    //   [3],
    //   [1],
    //   [2],
    //   [1,2,3],
    //   [1,3],
    //   [2,3],
    //   [1,2],
    //   []
    // ]
    
    vector<vector<int>> subsets(vector<int>& nums) {
        // 想法1: [[]] -> [[],[1]] -> [[], [1], [2], [1,2]] ...
        // 评估: 非递归, 时间复杂度O(n2) 
        
        // 初始状态，空集也是子集
        vector<vector<int>> res;
        vector<int> emp = {};
        res.push_back(emp);
        
        // 遍历所有nums
        for (int num : nums) {
            // 本轮循环需要往res中添加的项数
            int size = res.size();
            vector<vector<int>> cpyres = res;
            // 防止死循环
            for (auto v : cpyres) {
                v.push_back(num);
                res.push_back(v);
            }
        }
        
        return res;
    }
};
