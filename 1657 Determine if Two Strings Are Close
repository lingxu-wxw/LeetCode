// Input: word1 = "cabbba", word2 = "abbccc"
// Output: true
// Explanation: You can attain word2 from word1 in 3 operations.
// Apply Operation 1: "cabbba" -> "caabbb"
// Apply Operation 2: "caabbb" -> "baaccc"
// Apply Operation 2: "baaccc" -> "abbccc"

class Solution {
public:
    string getEncodeString(string word) {
        unordered_map<char, int> frequency;
        for (auto& ch : word) {
            frequency[ch]++;
        }
        string encodeStr = "";
        for (auto& iter : frequency) {
            encodeStr += iter.first;
            encodeStr += iter.second;
        }
        sort(encodeStr.begin(), encodeStr.end());
        return encodeStr;
    }

    bool closeStrings(string word1, string word2) {
        return (getEncodeString(word1) == getEncodeString(word2));
    }
};
