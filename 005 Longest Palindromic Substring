class Solution {
public:
    string longestPalindrome(string s) {
        const int size = s.size();
        if (size <= 1) return s;
        
        int begin = 0, maxlen = 0;
        
        for (int i = 0; i < size; i++){
            
            //寻找偶数长度的回文字符
            int low = i-1, high = i;
            while (low >= 0 && high < size && s[low] == s[high]){
                low--;
                high++;
            }
            if (high - low - 1 > maxlen){
                maxlen = high - low - 1;
                begin = low + 1;
            }
            
            //寻找奇数长度的回文字符
            low = i-1, high = i+1;
            while (low >= 0 && high < size && s[low] == s[high]){
                low--;
                high++;
            }
            if (high - low - 1 > maxlen){
                maxlen = high - low - 1;
                begin = low + 1;
            }
        }
        
        return s.substr(begin, maxlen);
    }
};
