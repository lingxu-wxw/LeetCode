// Input: head = [1,2,null,3]
// Output: [1,3,2]
// Explanation:

// The input multilevel linked list is as follows:
//   1---2---NULL
//   |
//   3---NULL

/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* prev;
    Node* next;
    Node* child;
};
*/

class Solution {
public:
    
    Node* flatten(Node* head) {
        if (!head) return NULL;
        
        Node* cur = head;
        
        while (cur) {
            // 处理child分支
            if (cur->child) {
                Node* next = cur->next;
                
                // 递归
                cur->child = flatten(cur->child);
                Node* last = cur->child;
                while (last->next) {
                    last = last->next;
                }
                
                // 前部连接
                cur->next = cur->child;
                cur->child->prev = cur;
                cur->child = NULL;
                
                // 后部连接
                last->next = next;
                if (next) {
                    next->prev = last;
                }
            }
            
            // 如果没有child就直接next
            cur = cur->next;
        }
        
        return head;
    }
};
