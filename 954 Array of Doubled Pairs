// Input: arr = [4,-2,2,-4]
// Output: true
// Explanation: We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].

class Solution {
public:
    
    bool helper(vector<int>& arr) {
        // value - count
        unordered_map<int, int> map;
        
        for (int num : arr) {
            // 处理偶数
            if (num % 2 == 0) {
                if (map.count(num/2)) {
                    map[num/2]--;
                    if (map[num/2] == 0) {
                        map.erase(num/2);
                    }
                } else if (map.count(num*2)) {
                    map[num*2]--;
                    if (map[num*2] == 0) {
                        map.erase(num*2);
                    }
                } else {
                    map[num]++;
                }
            }
            // 处理奇数
            else {
                map[num]++;
            }
        }
        
        return map.size() == 0; 
    }
    
    bool canReorderDoubled(vector<int>& arr) {
        sort(arr.begin(), arr.end());
        
        vector<int> posi, nega;
        for (int num : arr) {
            if (num < 0) {
                nega.insert(nega.begin(), num);
            } else {
                posi.push_back(num);
            }
        }
        
        return helper(posi) && helper(nega); 
    }
};
