class Solution {
public:
    
    // Input: n = 4, k = 2
    // Output:
    // [
    //   [2,4],
    //   [3,4],
    //   [2,3],
    //   [1,2],
    //   [1,3],
    //   [1,4],
    // ]
    
    // 参数: 可选数字n, 剩余数字k, 起始数字start, 单次结果out, 结果集合res
    void combineDFS(int nums, int k, int start, vector<int> &out, vector<vector<int>> &res){
        // 半全排列
        if (out.size() == k) {
            res.push_back(out);
            return;
        }
        
        for (int i = start; i <= nums; i++){
            out.push_back(i);
            combineDFS(nums, k, i + 1, out, res);
            out.pop_back();
        }
        
    }
    
    vector<vector<int>> combine(int nums, int k) {
        vector<vector<int>> res;
        vector<int> out;
        combineDFS(nums, k, 1, out, res);
        return res;
    }
};
