// Input: colors = "abaac", neededTime = [1,2,3,4,5]
// Output: 3
// Explanation: In the above image, 'a' is blue, 'b' is red, and 'c' is green.
// Bob can remove the blue balloon at index 2. This takes 3 seconds.
// There are no longer two consecutive balloons of the same color. Total time = 3.

class Solution {
public:
    int minCost(string colors, vector<int>& neededTime) {
        int count = colors.length();
        if (count == 1) return 0;

        int idx = 0;
        int res = 0;

        while (idx < count) {
            int totalTime = neededTime[idx];
            int maxTime = neededTime[idx];
            while (idx+1 < count && colors[idx] == colors[idx+1]) {
                idx++;
                totalTime += neededTime[idx];
                maxTime = max(maxTime, neededTime[idx]);
            }
            res += (totalTime - maxTime);
            idx++;
        }

        return res;
    }
};