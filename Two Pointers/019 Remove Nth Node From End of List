/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    //Given linked list: 1->2->3->4->5, and n = 2.
    //After removing the second node from the end, the linked list becomes 1->2->3->5.

    ListNode* removeNthFromEnd(ListNode* head, int n) {
        //删除链表倒数第n个
        
        //特殊情况, 长度为0/1
        if (!head->next) return NULL;
        
        ListNode *pre = head, *cur = head;
        for (int i = 0; i < n; i++) 
            cur = cur->next;
        
        //特殊情况, 长度小于等于n
        if (!cur) return head->next;
        
        //使pre的位置落在需要的删除的前一个
        while (cur->next) {
            cur = cur->next;
            pre = pre->next;
        }
        pre->next = pre->next->next;
        
        return head;
    }
};
