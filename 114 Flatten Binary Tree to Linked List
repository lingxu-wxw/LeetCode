/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    // For example, given the following tree:

    //     1
    //    / \
    //   2   5
    //  / \   \
    // 3   4   6
    // The flattened tree should look like:

    // 1
    //  \
    //   2
    //    \
    //     3
    //      \
    //       4
    //        \
    //         5
    //          \
    //           6  
        
    void flatten(TreeNode* root) {
    
        if (!root) return;
        
        // 左右子树分别完成flatten操作
        if (root->left) flatten(root->left);
        if (root->right) flatten(root->right);
        
        // 把其父节点和右子节点断开，将原左子结点连上父节点的右子节点上
        TreeNode *tmp = root->right;
        root->right = root->left;
        root->left = NULL;
        
        // 然后再把原右子节点连到新右子节点的右子节点上
        while (root->right) root = root->right;
        root->right = tmp;
    }
};
