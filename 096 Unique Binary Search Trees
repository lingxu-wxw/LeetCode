class Solution {
public:
    
    // Input: 3
    // Output: 5
    // Explanation:
    // Given n = 3, there are a total of 5 unique BST's:

    //    1         3     3      2      1
    //     \       /     /      / \      \
    //      3     2     1      1   3      2
    //     /     /       \                 \
    //    2     1         2                 3
    
    int numTrees(int n) {
        // 唯一二叉树的个数为左子树结点的个数乘以右子树的个数
        // 递归很好写但是18就超时了，必须将递归改成改成递推式
        
        vector<int> counts(n+1, 0);
        counts[0] = 1;
        counts[1] = 1;
        
        for (int i = 2; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                counts[i] += counts[j] * counts[i-j-1];
            }
        }
        
        return counts[n];
    }
};
