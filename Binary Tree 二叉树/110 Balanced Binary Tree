/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    // Given the following tree [3,9,20,null,null,15,7]:

    //     3
    //    / \
    //   9  20
    //     /  \
    //    15   7
    // Return true.
    
    int getTreeDepth(TreeNode* root) {
        // 获取以root为根节点的子树的高度
        if (!root) return 0;
        return 1 + max(getTreeDepth(root->left), getTreeDepth(root->right));
    }
    
    bool isBalanced(TreeNode* root) {
        // 平衡二叉树: 空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树
        if (!root) return true;
        if (abs(getTreeDepth(root->left) - getTreeDepth(root->right)) > 1) return false;
        return isBalanced(root->left) && isBalanced(root->right);
    }
};
