/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    // Given the sorted array: [-10,-3,0,5,9],

    // One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:
    //       0
    //      / \
    //    -3   9
    //    /   /
    //  -10  5
    
    TreeNode* helper(vector<int>& nums, int left, int right) {
        if (left > right) return NULL;
        int mid = (left + right) / 2;
        
        TreeNode *root = new TreeNode(nums[mid]);
        root->left = helper(nums, left, mid-1);
        root->right = helper(nums, mid+1, right);
        
        return root;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        // 尝试一下分治
        return helper(nums, 0, nums.size()-1);
    }
};
