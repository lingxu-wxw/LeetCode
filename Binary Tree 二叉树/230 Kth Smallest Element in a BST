// Input: root = [5,3,6,2,4,null,null,1], k = 3
//       5
//      / \
//     3   6
//    / \
//   2   4
//  /
// 1
// Output: 3

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        // 中序遍历
        stack<TreeNode*> st;
        TreeNode* p = root;
        int cnt = 0; 
        
        while (p || !st.empty()) {
            // 遍历左子结点
            while (p) {
                st.push(p);
                p = p->left;
            }
            
            // 遍历root
            p = st.top();
            st.pop();
            cnt++;
            
            if (cnt == k) {
                return p->val;
            }
            
            // 遍历右子结点
            p = p->right;
        }
        
        return p->val;
    }
};
