class Solution {
public:
    
    // Input: 3
    // Output: 3
    // Explanation: There are three ways to climb to the top.
    // 1. 1 step + 1 step + 1 step 
    // 2. 1 step + 2 steps
    // 3. 2 steps + 1 step
    
    int climbStairs(int n) {
        // 斐波那其数列, 到n层的方案数是n-1层和n-2层的总和
        // 直接算会超时, 用数组存储结果
        
        if (n < 3) return n;
        
        vector<int> res(n+1, 0);
        
        res[0] = 1;
        res[1] = 1;
        res[2] = 2;
        
        for (int i = 3; i <= n; i++) {
            res[i] = res[i-1] + res[i-2];
        }
        
        return res[n];
    }
};
