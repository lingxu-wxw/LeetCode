/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    // Input: [1,null,2,3]
    //   1
    //    \
    //     2
    //    /
    //   3
    // Output: [1,3,2]
    
    vector<int> inorderTraversal(TreeNode* root) {
        // 中序遍历: 中序遍历左子树 -> 访问根结点 -> 中序遍历右子树
        // 非递归的版本
        vector<int> res;
        stack<TreeNode *> stack;
        
        while (root || !stack.empty()) {
            // 访问左结点
            if (root) {
                stack.push(root);
                root = root->left;
            }
            else {
                // 访问根节点
                root = stack.top(); stack.pop();
                res.push_back(root->val);
                // 访问右结点
                root = root->right;
            }
        }
        
        return res;

    }
};
