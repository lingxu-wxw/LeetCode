// Input: instructions = "GGLLGG"
// Output: true
// Explanation: The robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0).
// When repeating these instructions, the robot remains in the circle of radius 2 centered at the origin.

class Solution {
public:
    bool isRobotBounded(string instructions) { 
        vector<vector<int>> directions = {{0, 1}, {-1, 0}, {0, -1}, {1, 0}}; // 上左下右 {dx, dy}
        int curdir = 0;
        
        int curX = 0;
        int curY = 0;
        
        for (auto instr : instructions) {
            if (instr == 'L') {
                curdir = (curdir + 1) % 4;
            }
            else if (instr == 'R') {
                curdir = (curdir + 3) % 4;
            }
            else if (instr == 'G') {
                curX += directions[curdir][0];
                curY += directions[curdir][1];
            }
            else {
                return false;
            }
        }
        
        // 如果一个周期结束后，位置没有变，或者方向变了，结果都是有边界的
        return (curX == 0 && curY == 0) || (curdir != 0);
    }
};
