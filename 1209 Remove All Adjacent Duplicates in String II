// Input: s = "deeedbbcccbdaa", k = 3
// Output: "aa"

// Explanation: 
// First delete "eee" and "ccc", get "ddbbbdaa"
// Then delete "bbb", get "dddaa"
// Finally delete "ddd", get "aa"

class Solution {
public:
    string removeDuplicates(string s, int k) {
        string str = s;   
        stack<pair<char, int>> st;

        for (char c : str) {
            if (st.empty() || c != st.top().first) {
                st.push({c, 1});
            } else {
                st.top().second++;
                if (st.top().second == k) {
                    st.pop();
                }
            }
        }

        str = "";
        while (!st.empty()) {
            for (int i = 0; i < st.top().second; i++) {
                str += st.top().first;
            }
            st.pop();
        }
        reverse(str.begin(), str.end());
        
        return str;
    }
};
