// Input: root = [3,9,20,null,null,15,7]
// Output: [3.00000,14.50000,11.00000]
// Explanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.
// Hence return [3, 14.5, 11].

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        if (!root) return {};
        
        queue<TreeNode*> queue;
        queue.push(root);
        
        vector<double> res;
        
        while (!queue.empty()) {
            int size = queue.size();
            long long total = 0, cnt = 0;
            
            for (int i = 0; i < size; i++) {
                TreeNode* node = queue.front(); queue.pop();
                total += node->val;
                cnt++;
                
                if (node->left) {
                    queue.push(node->left);
                }
                if (node->right) {
                    queue.push(node->right);
                }
            }
            
            if (cnt > 0) {
                res.push_back((double)total/cnt);
            }
        }
        
        return res;
    }
};
