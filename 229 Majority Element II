// Input: nums = [3,2,3]
// Output: [3]
// Input: nums = [1,2]
// Output: [1,2]

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int size = nums.size();
        
        // 出现大于1/3次的数至多只有两个
        int major1 = 0, cnt1 = 0;
        int major2 = 0, cnt2 = 0;
        vector<int> res;
        
        for (int i = 0; i < size; i++) {
            // 判断的顺序时重要的
            if (nums[i] == major1) {
                cnt1++;
            } 
            else if (nums[i] == major2) {
                cnt2++;
            } 
            else if (cnt1 == 0) {
                major1 = nums[i];
                cnt1++;
            } 
            else if (cnt2 == 0) {
                major2 = nums[i];
                cnt2++;
            }
            else {
                cnt1--;
                cnt2--;
            }
        }
        
        cnt1 = 0;
        cnt2 = 0;
        
        // 验证major1和major2是否超过了1/3
        for (int i = 0; i < size; i++) {
            if (nums[i] == major1) {
                cnt1++;
            } 
            else if (nums[i] == major2) {
                cnt2++;
            }
        }
        
        if (cnt1 > size/3) {
            res.push_back(major1);
        }
        if (cnt2 > size/3) {
            res.push_back(major2);
        }
        
        return res;
    }
};


