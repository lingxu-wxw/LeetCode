// Input: nums = [1,1,1,2,2,3], k = 2
// Output: [1,2]

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> res;
        unordered_map<int, int> map;
        priority_queue<pair<int,int>> pq; // 大顶堆
        
        for (auto num: nums) {
            map[num]++;
        }
        for (auto it: map) {
            pq.push({it.second, it.first});
        }
        
        for (int i = 0; i < k; i++) {
            res.push_back(pq.top().second);
            pq.pop();
        }
        
        return res;
    }
};
