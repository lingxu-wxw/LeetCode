// Input: n = 3, k = 2
// Output: [1,3,2]
// Explanation: The [1,3,2] has three different positive integers ranging from 1 to 3, and the [2,1] has exactly 2 distinct integers: 1 and 2.

class Solution {
public:
    vector<int> constructArray(int n, int k) {
        if (k >= n || k <= 0) return {};
        
        // 当k = n-1的时候, 例如n=9 k=8, 可以排出 1 9 2 8 3 7 4 6 5
        // 当k = n-1的时候, 例如n=9 k=5, 可以排出 1 9 2 8 3 4 5 6 7
        // 当k = n-1的时候, 例如n=9 k=4, 可以排出 1 9 2 8 7 6 5 4 3 
        
        int low = 1, high = n;
        int cnt = 0;
        vector<int> res;
        
        while (k > 1) {
            if (cnt % 2 == 0) {
                res.push_back(low);
                low++;
            } else {
                res.push_back(high);
                high--;
            }
            cnt++;
            k--;
        }
        
        if (cnt % 2 == 1) {
            for (int i = high; i >= low; i--) {
                res.push_back(i);
            }
        } else {
            for (int i = low; i <= high; i++) {
                res.push_back(i);
            }
        }
        
        
        return res;
    }
};
