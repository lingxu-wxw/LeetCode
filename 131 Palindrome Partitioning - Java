class Solution {
    
    // Input: "aab"
    // Output:
    // [
    //  ["aa","b"],
    //  ["a","a","b"]
    // ]
    
    public boolean isPalindrome(String s) {
        // 不用将索引当作参数是因为Java切分字符串比较方便
        int low = 0, high = s.length() - 1;
        while (low < high) {
            if (s.charAt(low) != s.charAt(high)) return false;
            low++; high--; 
        }
        return true;
    }
    
    public void partitionDFS(String s, int start, List<String> out, List<List<String>> res){
        if (start == s.length()) {
            res.add(new ArrayList<String>(out));
            return;
        }
        for (int i = start; i < s.length(); i++) {
            // 切分，不含i+1
            String str = s.substring(start, i+1);
            if (!isPalindrome(str)) continue;
            out.add(str);
            partitionDFS(s, i+1, out, res);
            out.remove(out.size()-1);
        }
    }
    
    public List<List<String>> partition(String s) {
        // Java没有参数传引用
        // 很特殊的二维数组声明方法
        List<List<String>> res = new ArrayList<List<String>>(); 
        List<String> out = new ArrayList<String>();
        partitionDFS(s, 0, out, res);
        return res;
    }
}
