// Input: poured = 2, query_row = 1, query_glass = 1
// Output: 0.50000
// Explanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). 
// There is one cup of excess liquid. 
// The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, 
// and each will get half cup of champange.

class Solution {
public:
    
    double champagneTower(int poured, int query_row, int query_glass) {
        vector<vector<double>> dp(101, vector<double>(101, 0.0));
        
        dp[0][0] = (double)poured;
        
        for (int i = 0; i <= query_row; i++) {
            for (int j = 0; j <= i; j++) {
                double left = (dp[i][j] - 1.0) / 2.0;
                if (left > 0) {
                    dp[i+1][j] += left;
                    dp[i+1][j+1] += left;
                }
            }
        }
        
        return min(1.0, dp[query_row][query_glass]);
    }
};
