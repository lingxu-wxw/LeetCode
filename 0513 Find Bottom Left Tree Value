// Input: root = [1,2,3,4,null,5,6,null,null,7]
// Output: 7

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void preorder(TreeNode* root, int depth) {
        if (!root) return;
        
        if (depth > maxdepth) {
            maxdepth = depth;
            value = root->val;
        }
        
        preorder(root->left, depth + 1);
        preorder(root->right, depth + 1);
    }
    
    int findBottomLeftValue(TreeNode* root) {
        preorder(root, 1);
        return value;
    }
    
private:
    int maxdepth = 0;
    int value;
};
