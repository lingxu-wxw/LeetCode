// Input: root = [5,3,6,2,4,null,7], k = 9
// Output: true

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        if (!root) return false;
        
        queue<TreeNode*> queue;
        unordered_set<int> set;
        
        queue.push(root);
        set.insert(root->val);
        
        // 层级遍历
        while (!queue.empty()) {
            int size = queue.size();
            
            for (int i = 0; i < size; i++) {
                TreeNode* node = queue.front(); queue.pop();
                
                if (node->left) {
                    if (set.count(k - node->left->val)) {
                        return true;
                    }
                    queue.push(node->left);
                    set.insert(node->left->val);
                }
                
                if (node->right) {
                    if (set.count(k - node->right->val)) {
                        return true;
                    }
                    queue.push(node->right);
                    set.insert(node->right->val);
                }
            }
        }
        
        return false;
    }
};
