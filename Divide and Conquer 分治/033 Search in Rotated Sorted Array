class Solution {
public:
    //7 0 1 2 4 5 6
    //6 7 0 1 2 4 5
    //5 6 7 0 1 2 4
    
    //4 5 6 7 0 1 2 
    //2 4 5 6 7 0 1 
    //1 2 4 5 6 7 0 
    //0 1 2 4 5 6 7
    
    //Input: nums = [4,5,6,7,0,1,2], target = 0
    //Output: 4
    
    int search(vector<int>& nums, int target) {
        int left = 0, right = nums.size() - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            //命中
            if (nums[mid] == target) return mid;
            
            //右半有序
            else if (nums[mid] < nums[right]){
                if (nums[mid] < target && nums[right] >= target)
                    left = mid + 1;
                else right = mid - 1;
            }
            
            //左半有序
            else {
                if (nums[left] <= target && nums[mid] > target)
                    right = mid - 1;
                else left = mid + 1;
            }
        }
        
        return -1;
    }
};
