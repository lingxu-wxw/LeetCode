class Solution {
public:
    // Input: [1,2,3]
    // Output:
    // [
    //   [1,2,3],
    //   [1,3,2],
    //   [2,1,3],
    //   [2,3,1],
    //   [3,1,2],
    //   [3,2,1]
    // ]
    
    void permuteDFS(vector<int> &nums, int start, vector<vector<int>> &res){
        //排列结束
        if (start >= nums.size()){
            res.push_back(nums);
            return;
        }
        
        //交换顺序
        for (int i = start; i < nums.size(); i++){
            swap(nums[start], nums[i]);
            permuteDFS(nums, start+1, res);
            swap(nums[start], nums[i]);
        }
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        //全排列问题
        vector<vector<int>> res;
        permuteDFS(nums, 0, res);
        return res;
    }
};
