// Input: nums = [3,1,4,1,5], k = 2
// Output: 2
// Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).
// Although we have two 1s in the input, we should only return the number of unique pairs.

class Solution {
public:
    int findPairs(vector<int>& nums, int k) {
        // val - idx, 如果有多，就存较小的idx
        unordered_map<int, int> map;
        
        // k-diff pairs, 存储较小值
        unordered_set<int> set;
        
        for (int i = 0; i < nums.size(); i++) {
            int num = nums[i];
            
            // num-k, num pair
            if (map.count(num-k) && !set.count(num-k)) {
                set.insert(num-k);
            }
            // num, num+k pair
            if (map.count(num+k) && !set.count(num)) {
                set.insert(num);
            }

            map[num] = i;
        }
        
        return set.size();
    }
};
