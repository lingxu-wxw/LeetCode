// Input: s = "baaca", k = 3
// Output: "aaabc"
// Explanation: 
// In the first move, we move the 1st character 'b' to the end, obtaining the string "aacab".
// In the second move, we move the 3rd character 'c' to the end, obtaining the final result "aaabc".

class Solution {
public:
    
    // 当k>=2时，总能通过一些列操作转换成为完全有序的字符串，而k>2的情况都可以归约到k=2的情况
    // 可以类似冒泡排序的思路，通过若干次操作先把1放到最后，再把2放到最后
    
    string orderlyQueue(string s, int k) {
        if (k >= 2) {
            sort(s.begin(), s.end());
            return s;
        }
        
        string res = s;
        
        for (int i = 0; i < s.length(); i++) {
            res = min(res, s.substr(i) + s.substr(0,i));
        }
        
        return res;
    }
};
