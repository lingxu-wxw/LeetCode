// Input: root = [1,null,3,2,4,null,5,6]
// Output: [[1],[3,2,4],[5,6]]

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if (!root) return {};
        
        vector<vector<int>> res;
        
        queue<Node*> queue;
        queue.push(root);
        
        while (!queue.empty()) {
            vector<int> level;
            
            // 处理一整个level的结点
            for (int i = queue.size(); i > 0; i--) {
                Node* node = queue.front();
                queue.pop();
                level.push_back(node->val);
                
                // 添加新的level的结点
                if (!node->children.empty()) {
                    for (auto child : node->children) {
                        queue.push(child);
                    }
                }
            }
            
            res.push_back(level);
        }
        
        return res;
    }
};
