// Input: x = 1, y = 4
// Output: 2
// Explanation:
// 1   (0 0 0 1)
// 4   (0 1 0 0)
//        ↑   ↑
// The above arrows point to positions where the corresponding bits are different.

class Solution {
public:
    int hammingDistance(int x, int y) {
        
        int res = 0;
        
        for (int i = 0; i < 32; i++) {
            int mask = 1 << i;
            
            if ((x & mask) != (y & mask)) {
                res++;
            }
        }
        
        return res;
    }
};
