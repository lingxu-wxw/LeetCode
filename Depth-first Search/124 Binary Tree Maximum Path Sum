/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    // Input: [-10,9,20,null,null,15,7]

    //    -10
    //    / \
    //   9  20
    //     /  \
    //    15   7

    // Output: 42
    
    int maxPathSumDFS(TreeNode* node, int& res) {
        // 叶子结点
        if (!node) return 0;
        
        // 经过左右子结点的最大值
        int left = max(maxPathSumDFS(node->left, res), 0);
        int right = max(maxPathSumDFS(node->right, res), 0);
        
        // 更新全局最大路径
        res = max(res, left + right + node->val);
        
        return max(left, right) + node->val;
    }
    
    int maxPathSum(TreeNode* root) {
        // 全局最大路径
        int res = INT_MIN;
        maxPathSumDFS(root, res);
        return res;
    }
};
