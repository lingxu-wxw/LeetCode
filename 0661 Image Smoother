// Input: img = [[1,1,1],[1,0,1],[1,1,1]]
// Output: [[0,0,0],[0,0,0],[0,0,0]]
// Explanation:
// For the points (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0
// For the points (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0
// For the point (1,1): floor(8/9) = floor(0.88888889) = 0

class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int height = img.size();
        int width = img[0].size();
        
        vector<vector<int>> res(height, vector<int>(width, 0));
        vector<vector<int>> directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}, {-1, -1}, {1, -1}, {-1, 1}, {1, 1}};
        
        for (int i = 0; i < height; i++) {
            for (int j = 0; j < width; j++) {
                int cnt = 1;
                int total = img[i][j];
                
                for (auto dir : directions) {
                    int newi = i + dir[0];
                    int newj = j + dir[1];
                    if (newi < 0 || newi >= height || newj < 0 || newj >= width) continue;
                    
                    cnt++;
                    total += img[newi][newj];
                }
                
                res[i][j] = total / cnt;
            }
        }
        
        return res;
    }
};
