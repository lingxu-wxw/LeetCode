class Solution {
public:
    //Input: s = "aab", p = "c*a*b"
    //Output: true
    //Explanation: c can be repeated 0 times, a can be repeated 1 time. Therefore it matches "aab".
    
    //It is guaranteed for each appearance of the character '*', there will be a previous valid character to match.
    
    bool isMatch(string s, string p) {
        //s是字符串, p是正则表达式
        
        //case 1: 空
        if (p.empty()) return s.empty();
        
        //case 2: 长度1
        if (p.size() == 1) {
            return (s.size() == 1 && (s[0] == p[0] || p[0] == '.'));
        }
        
        //case 3: p的第二个字符不是*, substr掉第一个字符, 递归
        if (p[1] != '*') {
            if (s.empty()) return false;
            return (s[0] == p[0] || p[0] == '.') && isMatch(s.substr(1), p.substr(1));
        }
        
        //case 4: p的第二个字符是*, 递归
        while (!s.empty() && (s[0] == p[0] || p[0] == '.')) {
            //匹配0个字符
            if (isMatch(s, p.substr(2))) return true;
            s = s.substr(1);
        }
        return isMatch(s, p.substr(2));
    }
};
