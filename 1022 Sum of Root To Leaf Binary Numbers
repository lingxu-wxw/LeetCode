// Input: root = [1,0,1,0,1,0,1]
// Output: 22
// Explanation: (100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void sumRootToLeafDFS(TreeNode* root, int num, int& res) {
        if (!root) return;
        
        num = num * 2 + root->val;
        
        if (!root->left && !root->right) {
            res += num;
        }
        
        if (root->left) {
            sumRootToLeafDFS(root->left, num, res);
        }
        if (root->right) {
            sumRootToLeafDFS(root->right, num, res);
        }
    }
    
    int sumRootToLeaf(TreeNode* root) {
        int res = 0;
        sumRootToLeafDFS(root, 0, res);
        return res;
    }
};
