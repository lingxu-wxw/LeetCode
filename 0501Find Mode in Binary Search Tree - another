// Input: root = [1,null,2,2]
// Output: [2]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    unordered_map<int, int> map;
    
    void helper(TreeNode* root, int& maxcnt) {
        if (!root) return;
        
        map[root->val]++;
        if (map[root->val] > maxcnt) {
            maxcnt = map[root->val];
        }
        
        helper(root->left, maxcnt);
        helper(root->right, maxcnt);
    }
    
    vector<int> findMode(TreeNode* root) {
        int maxcnt = 0;
        helper(root, maxcnt);
        
        vector<int> res;
        for (auto iter : map) {
            if (iter.second == maxcnt) {
                res.push_back(iter.first);
            }
        }
        
        return res;
    }
};
