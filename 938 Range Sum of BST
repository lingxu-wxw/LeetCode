// Input: root = [10,5,15,3,7,null,18], low = 7, high = 15
// Output: 32
// Explanation: Nodes 7, 10, and 15 are in the range [7, 15]. 7 + 10 + 15 = 32.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        queue<TreeNode*> queue;
        queue.push(root);

        int sum = 0;
        
        while (!queue.empty()) {
            int size = queue.size();
            
            for (int i = 0; i < size; i++) {
                TreeNode* node = queue.front();
                queue.pop();
                
                if (node->val >= low && node->val <= high) {
                    sum += node->val;
                }
                
                if (node->val > low && node->val < high) {
                    if (node->left) queue.push(node->left);
                    if (node->right) queue.push(node->right);
                }
                else if (node->val <= low) {
                    if (node->right) queue.push(node->right);
                }
                else {
                    if (node->left) queue.push(node->left);
                }
            }
        }
        
        return sum;
    }
};
