class Solution {
    
    // Input: 
    // gas  = [1,2,3,4,5]
    // cost = [3,4,5,1,2]

    // Output: 3
    
    public int canCompleteCircuit(int[] gas, int[] cost) {
        // 首先要知道能走完整个环的前提是gas的总量要大于cost的总量，这样才会有起点的存在
        // 当到达某一站点时，若这个值小于0了，则说明从起点到这个点中间的任何一个点都不能作为起点，则把起点设为下一个点，继续遍历
        if (gas == null || cost == null || gas.length != cost.length) return -1;
        
        int total = 0, restgas = 0, start = 0;
        
        for (int i = 0; i < gas.length; ++i) {
            total += gas[i] - cost[i];
            restgas += gas[i] - cost[i];
            if (restgas < 0) {
                start = i+1;
                restgas = 0;
            }
        }
        
        // 如果total小于0是不可能有解的
        if (total >= 0) return start;
        else return -1;
    }
}
