// Input: n = 10
// Output: 12
// Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.

class Solution {
public:
    int nthUglyNumber(int n) {
        // 最小堆，会按照大小进行排序
        priority_queue<long, vector<long>, greater<long>> pq;
        pq.push(1);
        
        for (int i = 1; i < n; i++) {
            long num = pq.top();
            pq.pop();
            
            // 清除最小堆中的重复数据
            while (!pq.empty() && pq.top() == num) {
                pq.pop();
            }
            
            // 更新最小堆
            pq.push(num*2);
            pq.push(num*3);
            pq.push(num*5);
        }
        
        // 停止循环时的top()就是第n个ugly number
        return pq.top();
    }
};
