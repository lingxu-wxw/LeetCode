// Input: str = "1538023"
// Output: 4
// The longest substring with same first and second half sum is "5380"

int findLength(string str, int n) {
  	int len = str.length();
  
  	// dp[i][j] 以str[i] 结尾，长度为j的substring的和
  	vector<vector<int>> dp(len, vector<int>(len, 0));
  
	for (int i = 0; i < len; i++) {
  		int digit = (str[i] - '0');
    	dp[i][1] = digit;
    
    	if (i > 0) {
      		for (int j = 2; j <= i+1; j++) {
          		dp[i][j] = dp[i-1][j-1] + digit;
      		}
    	}
  	}
  
  	int maxlen = 0;
  
  	for (int i = 0; i < len; i++) {
  		for (int j = 1; j <= i+1; j++) {
    		if (i + j < len && dp[i][j] == dp[i+j][j]) {
        		maxlen = max(maxlen, j * 2);
        	}
    	}
  	}
  
  	return maxlen;
}


int findLength(string str, int n) {
	if (n == 1) return 0;
  	
  	int maxlen = 0;
  
  	for (int i = 0; i < n; i++) {
    	int j = i, k = i+1;
      	int leftsum = 0, rightsum = 0;
      
      	while (j >=0 && k < n) {
        	leftsum += str[j] - '0';
          	rightsum += str[k] - '0';
          	if (leftsum == rightsum) {
            	maxlen = max(maxlen, k - j + 1);
            }
          	j--;
          	k++;
        }
    }
  
  	return maxlen;
}
