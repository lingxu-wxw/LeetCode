class Solution {
    
    // Input: [1,0,2]
    // Output: 5
    // Explanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.
    
    public int candy(int[] ratings) {
        if (ratings == null || ratings.length == 0) 
            return 0;
        
        // lefts和rights分别表示从左考虑和从右考虑的最小情况
        int length = ratings.length;
        int[] lefts = new int[length];
        int[] rights = new int[length];
        
        // 从左往右遍历
        lefts[0] = 1;
        for (int i = 1; i < length; i++) {
            if (ratings[i] > ratings[i-1])  lefts[i] = lefts[i-1] + 1;
            else lefts[i] = 1;
        }
        
        // 从右往左遍历
        rights[length-1] = lefts[length-1];
        for (int i = length-2; i >= 0; i--) {
            if (ratings[i] > ratings[i+1])  rights[i] = rights[i+1] + 1;
            else rights[i] = 1;
        }
        
        int mincandy = 0;
        for (int i = 0; i < length; i++) {
            mincandy += Math.max(lefts[i], rights[i]);
        }
        
        return mincandy;
    }
}
