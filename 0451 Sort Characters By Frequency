// Input: s = "tree"
// Output: "eert"
// Explanation: 'e' appears twice while 'r' and 't' both appear once.
// So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.

class Solution {
public:
    
    // 为true的排前面
    struct compare {
        bool operator()(const pair<char, int>& p1, const pair<char, int>& p2) {
            return p1.second > p2.second;
        }
    };
    
    string frequencySort(string s) {
        unordered_map<char, int> map;
        string res = "";
        
        for (char c : s) {
            map[c]++;
        }
        
        // 自定义排序
        vector<pair<char, int>> vec(map.begin(), map.end());
        sort(vec.begin(), vec.end(), compare());
        
        for (auto iter : vec) {
            int cnt = iter.second;
            while (cnt > 0) {
                res += iter.first;
                cnt--;
            }
        }
        
        return res;
    }
};
