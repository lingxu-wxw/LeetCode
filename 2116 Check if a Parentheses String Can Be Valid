// Input: s = "))()))", locked = "010100"
// Output: true
// Explanation: locked[1] == '1' and locked[3] == '1', so we cannot change s[1] or s[3].
// We change s[0] and s[4] to '(' while leaving s[2] and s[5] unchanged to make s valid.

class Solution {
public:
    
    // 参考 0678 Valid Parenthesis String
    
    bool canBeValid(string s, string locked) {
        int len = s.length();
        if (len & 1) return false;
        
        // 先从左往右遍历，看看有没有可能出现右括号太多的情况
        int balance = 0;
        
        for (int i = 0; i < len; i++) {
            if (s[i] == ')' && locked[i] == '1') {
                balance--;
            } else {
                balance++;
            }
            
            if (balance < 0) {
                return false;
            }
        }
        
        // 再从右往左遍历，看看有没有可能出现左括号太多的情况
        balance = 0;
        
        for (int i = len-1; i >= 0; i--) {
            if (s[i] == '(' && locked[i] == '1') {
                balance--;
            } else {
                balance++;
            }
            
            if (balance < 0) {
                return false;
            }
        }
        
        return true;
    }
};
