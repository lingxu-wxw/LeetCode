#include <iostream>
#include <vector>
using namespace std;

int Determinant(vector<vector<int>>& nums, int n) {
	if (n == 1) {
		return nums[0][0];
	}
	else if (n == 2) {
		return nums[0][0] * nums[1][1] - nums[0][1] * nums[1][0];
	}
	else {
		int res = 0;

		for (int idx = 0; idx < n; idx++) {
			vector<vector<int>> minor = vector<vector<int>>(n - 1, vector<int>(n - 1, 0));	// 代数余子式

			for (int i = 0; i < n - 1; i++) {
				for (int j = 0; j < n - 1; j++) {
					minor[i][j] = nums[i + 1][((j < idx) ? j : j + 1)];
				}
			}

			res += nums[0][idx] * Determinant(minor, n - 1) * ((idx % 2) ? -1 : 1);
		}

		return res;
	}
}

int main() {
	int n;
	cin >> n;

	vector<vector<int>> nums = vector<vector<int>>(n, vector<int>(n, 0));
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> nums[i][j];
		}
	}

	cout << "Determinant: " << Determinant(nums, n) << endl;

	return 0;
}
