// Input: nums = [0,0,1,0]
// Output: [2,4]
// Explanation: Division at index
// - 0: numsleft is []. numsright is [0,0,1,0]. The score is 0 + 1 = 1.
// - 1: numsleft is [0]. numsright is [0,1,0]. The score is 1 + 1 = 2.
// - 2: numsleft is [0,0]. numsright is [1,0]. The score is 2 + 1 = 3.
// - 3: numsleft is [0,0,1]. numsright is [0]. The score is 2 + 0 = 2.
// - 4: numsleft is [0,0,1,0]. numsright is []. The score is 3 + 0 = 3.
// Indices 2 and 4 both have the highest possible division score 3.
// Note the answer [4,2] would also be accepted.

class Solution {
public:
    vector<int> maxScoreIndices(vector<int>& nums) {
        int zeros = 0, ones = 0;
        for (int num : nums) {
            if (num == 0) zeros++;
            else if (num == 1) ones++;
        }
        
        int maxscores = ones;
        int curscores = ones;
        vector<int> res = {0};
        
        for (int i = 1; i <= nums.size(); i++) {
            if (nums[i-1] == 0) {
                curscores++;
            } 
            else if (nums[i-1] == 1) {
                curscores--;
            }
            
            if (curscores > maxscores) {
                maxscores = curscores;
                res.clear();
            }
            if (curscores == maxscores) {
                res.push_back(i);
            }
        }
        
        return res;
    }
};
