// Input: n = "13"
// Output: "3"
// Explanation: 13 base 3 is 111.

// Input: n = "4681"
// Output: "8"
// Explanation: 4681 base 8 is 11111.

class Solution {
public:
    
    // n base k : 11...11(m bit)
    // n = 1 + k + k^2 + ... + k^(m-1) = (k^m - 1)/(k - 1) 
    // 等比数列求和：Sn = a1 * (1 - q^n)/(1 - q)
    // n固定，要让k最小，m要越大
    
    // 放缩，n <= k^m - 1, n > k^(m-1)
    // n ∈ [3, 10^18]
    // k >= 2, k < n^(1/(m-1))
    // m >= 2, m <= (int)log2(n+1), e.g. k=2, n=6, m<=2, 取不到3(111)
    
    // 最差情况，k=n-1, m=2, 一定有解
    
    string smallestGoodBase(string n) {
        long long num = stoll(n);
        
        for (int m = log(num+1)/log(2); m >= 2; m--) {
            long long left = 2;
            long long right = pow(num, 1.0/(m-1)) + 1;
            
            while (left < right) {
                long long k = left + (right - left) / 2;
                
                long long sum = 0;
                for (int i = 0; i < m; i++) {
                    sum = sum * k + 1;
                }
                
                if (sum == num) {
                    return to_string(k);
                }
                
                if (sum < num) {
                    left = k + 1;
                } else {
                    right = k;
                }
            }
        }
        
        return to_string(num-1);
    }
};

