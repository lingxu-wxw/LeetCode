// Input: nums = [2,6,4,8,10,9,15]
// Output: 5
// Explanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int size = nums.size();
        if (size == 1) return 0;
        
        // start和end需要保证在都不被更新的情况下，会return 0
        // 一旦有一个无序的数字，start和end都会被更新
        int start = -1;
        int end = -1;
        
        int leftmax = nums[0];
        int rightmin = nums[size-1];
        
        for (int i = 0; i < size; i++) {
            leftmax = max(leftmax, nums[i]);
            rightmin = min(rightmin, nums[size-1-i]);
            
            // 当前数字不是从左往右数最大的
            if (leftmax > nums[i]) {
                end = i;
            }
            
            // 当前数字不是从右往左数最小的
            if (rightmin < nums[size-1-i]) {
                start = size-1-i;
            }
        }
        
        return (start == -1) ? 0 : end - start + 1;
    }
};
