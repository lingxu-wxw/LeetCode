// Input: n = 3
// Output: 1
// Explanation: At first, the three bulbs are [off, off, off].
// After the first round, the three bulbs are [on, on, on].
// After the second round, the three bulbs are [on, off, on].
// After the third round, the three bulbs are [on, off, off]. 
// So you should return 1 because there is only one bulb is on.

class Solution {
public:
    
    // n=1-3, res=1, √××
    // n=4-8, res=2, √××√×××
    // n=9-15, res=3, √××√×××√××××
    
    int bulbSwitch(int n) {
        // 求1到n之间完全平方数的个数
        int res;
        while (res*res <= n) {
            res++;
        }
        return res-1;
    }
};
