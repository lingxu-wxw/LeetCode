// Input: nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]
// Output: 2
// Explanation:
// The two tuples are:
// 1. (0, 0, 0, 1) -> nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0
// 2. (1, 1, 0, 0) -> nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0

class Solution {
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4) {
        
        // sum - cnt
        unordered_map<int, int> sum12, sum34;
        int res = 0;
        
        for (int num1 : nums1) {
            for (int num2 : nums2) {
                sum12[num1+num2]++;
            }
        }
        
        for (int num3 : nums3) {
            for (int num4 : nums4) {
                sum34[num3+num4]++;
            }
        }
        
        // 找到结果
        for (auto iter : sum12) {
            if (sum34.count(-iter.first)) {
                res += iter.second * sum34[-iter.first];
            }
        }
        
        return res;
    }
};
