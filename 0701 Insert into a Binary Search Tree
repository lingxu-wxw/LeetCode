// Input: root = [4,2,7,1,3], val = 5
// Output: [4,2,7,1,3,5]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        // It is guaranteed that the new value does not exist in the original BST.
        
        if (!root) {
            return new TreeNode(val);
        }
        
        TreeNode* node = root;
        
        while (node) {
            if (node->val == val) {
                break;
            }
            else if (node->val < val) {
                if (!node->right) {
                    node->right = new TreeNode(val);
                }
                node = node->right;
            }
            else if (node->val > val) {
                if (!node->left) {
                    node->left = new TreeNode(val);
                }
                node = node->left;
            }
        }
        
        return root;
    }
};
