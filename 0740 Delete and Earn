// Input: nums = [2,2,3,3,3,4]
// Output: 9
// Explanation: You can perform the following operations:
// - Delete a 3 to earn 3 points. All 2's and 4's are also deleted. nums = [3,3].
// - Delete a 3 again to earn 3 points. nums = [3].
// - Delete a 3 once more to earn 3 points. nums = [].
// You earn a total of 9 points.

class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
        // 遍历得到数组中最大的数字
        int maxnum = 0;
        
        for (int num : nums) {
            maxnum = max(maxnum, num);
        }
        
        // dp[i]表示遍历到num值为i时的最大point
        // dp的初始值定为num*cnt, 1 <= nums[i] <= 10^4, 所以do[1]不会再改变了
        vector<int> dp(maxnum+1, 0);
        
        for (int num : nums) {
            dp[num] += num;
        }
        
        // 递推，空位都是0
        for (int i = 2; i <= maxnum; i++) {
            dp[i] = max(dp[i-2] + dp[i], dp[i-1]);
        }
        
        return dp[maxnum];
    }
};
