class Solution {
public:
    
    // Input:
    // [
    //  [ 1, 2, 3 ],
    //  [ 4, 5, 6 ],
    //  [ 7, 8, 9 ]
    // ]
    // Output: [1,2,3,6,9,8,7,4,5]
    
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
        if (matrix.empty() || matrix[0].empty()) return {};
        int height = matrix.size(), width = matrix[0].size();
        
        vector<int> res;
        
        //矩阵当前的边缘
        int up = 0, down = height-1, left = 0, right = width-1;
        
        while (true) {
            //向右
            for (int i = left; i <= right; i++) res.push_back(matrix[up][i]);
            if (++up > down) break;
            
            //向下
            for (int i = up; i <= down; i++) res.push_back(matrix[i][right]);
            if (--right < left) break;
        
            //向左
            for (int i = right; i >= left; i--) res.push_back(matrix[down][i]);
            if (--down < up) break;
        
            //向上
            for (int i = down; i >= up; i--) res.push_back(matrix[i][left]);
            if (++left > right) break;
        }
        
        return res;
    }
};
