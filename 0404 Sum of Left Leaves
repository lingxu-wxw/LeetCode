// Input: root = [3,9,20,null,null,15,7]
// Output: 24
// Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int sumOfLeftLeavesDFS(TreeNode* node, bool isleft) {
        if (node == NULL) return 0;
        
        // 叶子节点
        if (!node->left && !node->right) {
            return isleft ? node->val : 0;
        }
        
        return sumOfLeftLeavesDFS(node->left, true) + sumOfLeftLeavesDFS(node->right, false); 
    }
    
    int sumOfLeftLeaves(TreeNode* root) {
        return sumOfLeftLeavesDFS(root, false);
    }
};
