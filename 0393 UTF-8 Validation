//    Char. number range  |        UTF-8 octet sequence
//       (hexadecimal)    |              (binary)
//    --------------------+---------------------------------------------
//    0000 0000-0000 007F | 0xxxxxxx
//    0000 0080-0000 07FF | 110xxxxx 10xxxxxx
//    0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
//    0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx

class Solution {
public:
    bool validUtf8(vector<int>& data) {
        // 二进制 0b，八进制 0，十六进制 0x
        
        int cnt = 0;
        
        for (int num : data) {
            // 一个新的character
            if (cnt == 0) {
                if ((num >> 7) == 0) continue;
                else if ((num >> 5) == 0b110) cnt = 1;
                else if ((num >> 4) == 0b1110) cnt = 2;
                else if ((num >> 3) == 0b11110) cnt = 3;
                else return false;
            }
            // 前面character的后续
            else {
                if ((num >> 6) != 0b10) return false;
                cnt--;
            }
        }
        
        // 结束的时候所有character都处理完了
        return (cnt == 0);
    }
};
