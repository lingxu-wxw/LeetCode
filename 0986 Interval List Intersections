// Input: firstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]]
// Output: [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]

class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& firstList, vector<vector<int>>& secondList) {
        int size1 = firstList.size();
        int size2 = secondList.size();
        
        int i = 0, j = 0;
        
        vector<vector<int>> res = {};
        
        while (i < size1 && j < size2) {
            int start1 = firstList[i][0];
            int end1 = firstList[i][1];
            int start2= secondList[j][0];
            int end2= secondList[j][1];
                                 
            if (start1 > end2) {
                j++;
                continue;
            }
            if (start2 > end1) {
                i++;
                continue;
            }
            
            res.push_back({max(start1, start2), min(end1, end2)});
                                   
            if (end1 > end2) {
                j++;
            } else {
                i++;
            }
        }
                                   
        return res;
    }
}; 
