// Input: nums = [1,7,3,6,5,6]
// Output: 3
// Explanation:
// The pivot index is 3.
// Left sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11
// Right sum = nums[4] + nums[5] = 5 + 6 = 11

class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int size = nums.size();
        
        // 计算出全部数字的和
        int totalsum = 0;
        for (int num : nums) {
            totalsum += num;
        }
        
        // 判断idx=i能够成为pivot
        int leftsum = 0;
        for (int i = 0; i < size; i++) {
            // 比较此时的leftsum和rightsum
            if (leftsum == (totalsum - nums[i] - leftsum)) {
                return i;
            }
            
            leftsum += nums[i];
        }
        
        return -1;
    }
};
