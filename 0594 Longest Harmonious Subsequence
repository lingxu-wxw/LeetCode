// Input: nums = [1,3,2,2,5,2,3,7]
// Output: 5
// Explanation: The longest harmonious subsequence is [3,2,2,2,3].
    
class Solution {
public:
    int findLHS(vector<int>& nums) {
        // map自带排序功能
        map<int, int> map;
        
        int preval, precnt;
        int res = 0;
        
        for (int num : nums) {
            map[num]++;
        }
        
        for (auto iter = map.begin(); iter != map.end(); iter++) {
            if ((iter != map.begin()) && (iter->first - preval == 1)) {
                res = max(res, iter->second + precnt);
            }
            
            preval = iter->first;
            precnt = iter->second;
        }
        
        return res;
    }
};
