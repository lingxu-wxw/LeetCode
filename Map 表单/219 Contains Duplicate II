// Input: nums = [1,0,1,1], k = 1
// Output: true

// Input: nums = [1,2,3,1,2,3], k = 2
// Output: false

class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        // 存在一组相同的数，他们的绝对坐标差距小于等于k
        // 数组中数的值 -> 在数组中的坐标
        unordered_map<int, int> map;
        int size = nums.size();
        
        for (int i = 0; i < size; i++) {
            // 对当前数字i，存在一个已经出现过的数字i，并且绝对坐标差距小于k
            if (map.find(nums[i]) != map.end() && i - map[nums[i]] <= k) {
                return true;
            } else {
                map[nums[i]] = i;
            }
        }
        
        return false;
    }
};
