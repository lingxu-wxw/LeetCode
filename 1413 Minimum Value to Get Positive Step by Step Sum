// Input: nums = [-3,2,-3,4,2]
// Output: 5
// Explanation: If you choose startValue = 4, in the third iteration your step by step sum is less than 1.
// step by step sum
// startValue = 4 | startValue = 5 | nums
//   (4 -3 ) = 1  | (5 -3 ) = 2    |  -3
//   (1 +2 ) = 3  | (2 +2 ) = 4    |   2
//   (3 -3 ) = 0  | (4 -3 ) = 1    |  -3
//   (0 +4 ) = 4  | (1 +4 ) = 5    |   4
//   (4 +2 ) = 6  | (5 +2 ) = 7    |   2

class Solution {
public:
    int minStartValue(vector<int>& nums) {
        int curprefix = 0;
        int minprefix = INT_MAX;
        
        for (int num : nums) {
            curprefix += num;
            minprefix = min(minprefix, curprefix);
        } 
        
        return (minprefix >= 1) ? 1 : 1 - minprefix;
    }
};

