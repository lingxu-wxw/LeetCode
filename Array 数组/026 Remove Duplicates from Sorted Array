class Solution {
public:

    // Given nums = [1,1,2],
    // Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.
    // It doesn't matter what you leave beyond the returned length.

    int removeDuplicates(vector<int>& nums) {
        // 用快慢指针来记录index，最开始都指向nums[0]
        // 如果两个指针指的数字相同，则快指针向前走一; 如果不同，则两个指针都向前走一步
        // 这样当快指针走完整个数组后，慢指针当前的坐标加1就是数组中不同数字的个数
        
        int size = nums.size();
        if (size == 0) return 0;
        
        int pre = 0, cur = 0;
        
        while (cur < size) {
            if (nums[pre] == nums[cur]) ++cur;
            else nums[++pre] = nums[cur++];
        }
        
        //返回数组的前pre+1个
        return pre + 1;
    }
};
