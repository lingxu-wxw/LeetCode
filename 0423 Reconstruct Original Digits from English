// Input: s = "owoztneoer"
// Output: "012"

// Input: s = "fviefuro"
// Output: "45"

class Solution {
public:
    string originalDigits(string s) {
        
        vector<string> digits = {"zero", "two", "four", "six", "eight", "one", "three", "five", "seven", "nine"};
        
        // 第一轮 'z', 'w', 'u', 'x', 'g' 只出现过一次，选出02468
        // 第二轮 'o', 't', 'f', 's' 选出1357
        vector<char> letters = {'z', 'w', 'u', 'x', 'g', 'o', 't', 'f', 's', 'i'};
        vector<char> c_digits = {'0', '2', '4', '6', '8', '1', '3', '5', '7', '9'};
        
        vector<int> map(26, 0);
        string res = "";
        
        // 统计出现次数
        for (char c: s) {
            map[c-'a']++;
        }
        
        // 按照顺序依次处理数字
        for (int i = 0; i < 10; i++) {
            // 当前数字出现次数
            int cnt = map[letters[i]-'a'];
            for (char c : digits[i]) {
                map[c-'a'] -= cnt;
            }
            
            while (cnt > 0) {
                res += c_digits[i];
                cnt--;
            }
        }
        
        // 升序排序
        sort(res.begin(), res.end());
        
        return res;
    }
};

/*
zero
 e on
   o tw
 er  t h
  ro    fu
 e      f iv
          i sx
 e  n      vs
 e   t h  i   g
 e  n     i
*/

/*
one
  ethr
  e   fiv
 ne     vs
 ne    i
*/
