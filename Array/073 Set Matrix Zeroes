class Solution {
public:
    
    // Input: 
    // [
    //   [1,1,1],
    //   [1,0,1],
    //   [1,1,1]
    // ]
    // Output: 
    // [
    //   [1,0,1],
    //   [0,0,0],
    //   [1,0,1]
    // ]
    
    void setZeroes(vector<vector<int>>& matrix) {
        // 题目要求do in place, 所以要求O(1)的空间, 只能挑一列来记录其他列的情况了
        
        if (matrix.empty() || matrix[0].empty()) return;
        
        // m/n分别是高和宽
        int m = matrix.size(), n = matrix[0].size();
        
        // 用第一行和第一列来记录其他行列的情况, 预先扫一遍这两条
        bool firstcolflag = false, firstrowflag = false;
        for (int i = 0; i < m; i++) {
            if (matrix[i][0] == 0) {
                firstcolflag = true;
                break;
            }
        }
        for (int j = 0; j < n; j++) {
            if (matrix[0][j] == 0) {
                firstrowflag = true;
                break;
            }
        }
        
        // 第一次遍历matrix, 记录标志位
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        // 第二次遍历matrix, 开始置零
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (matrix[i][0] == 0 || matrix[0][j] == 0){
                    matrix[i][j] = 0;
                }
            }
        }
        
        // 处理第一行和第一列的置零
        if (firstcolflag) {
            for (int i = 0; i < m; i++) 
                matrix[i][0] = 0;
        }
        if (firstrowflag) {
            for (int j = 0; j < n; j++) 
                matrix[0][j] = 0;
        }
    }
};
