// Input: num = "1432219", k = 3
// Output: "1219"
// Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.

// Input: num = "10", k = 2
// Output: "0"
// Explanation: Remove all the digits from the number and it is left with nothing which is 0.

class Solution {
public:
    string removeKdigits(string num, int k) {
        
        // 可以将string当作vector一样用
        string res = "";
        
        for (char c: num) {
            // res.back()表示字符串的最后一位，相当于栈顶
            // 如果栈顶字符大于c，删除栈顶字符
            while (k > 0 && res.size() > 0 && res.back() > c) {
                res.pop_back();
                k--;
            }
            
            // 当res不为空或c不为'0'才加入res，防止res出现头部0
            if (res.size() > 0 || c != '0') {
                res.push_back(c);
            }
        }
        
        // 删除多余的尾部字符
        while (k > 0 && res.size() > 0) {
            res.pop_back();
            k--;
        }
        
        return res.empty() ? "0" : res;
    }
};
