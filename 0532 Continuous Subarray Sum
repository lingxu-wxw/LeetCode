// Input: nums = [23,2,4,6,7], k = 6
// Output: true
// Explanation: [2, 4] is a continuous subarray of size 2 whose elements sum up to 6.

// Input: nums = [23,2,6,4,7], k = 6
// Output: true
// Explanation: [23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.
// 42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.

class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        // 保存已经出现过的 %k 值
        // 如果 a % k = c, b % k = c, 则 (a-b) % k = 0
        unordered_set<int> remainder;
        
        // 子序列长度至少为2，所以每次都保存上一个子序列的余数
        int pre = 0;
        int sum = 0;
        
        for (int num : nums) {
            sum += num;
            
            int rem = sum % k;
            if (remainder.count(rem)) {
                return true;
            }
            
            remainder.insert(pre);
            pre = rem;
        }
        
        return false;
    }
};
