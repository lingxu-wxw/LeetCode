// Input: root = [3,1,4,3,null,1,5]
// Output: 4
// Explanation: Nodes in blue are good.
// Root Node (3) is always a good node.
// Node 4 -> (3,4) is the maximum value in the path starting from the root.
// Node 5 -> (3,4,5) is the maximum value in the path
// Node 3 -> (3,1,3) is the maximum value in the path.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void goodNodesDFS(TreeNode* lastgood, TreeNode* node, int& cnt) {
        if (node == NULL) {
            return;
        }
        
        if (node->val >= lastgood->val) {
            lastgood = node;
            cnt++;
        }
        
        goodNodesDFS(lastgood, node->left, cnt);
        goodNodesDFS(lastgood, node->right, cnt);
    }
    
    int goodNodes(TreeNode* root) {
        if (!root) return 0;
        
        int cnt = 1;
        goodNodesDFS(root, root->left, cnt);
        goodNodesDFS(root, root->right, cnt);
        
        return cnt;
    }
};
