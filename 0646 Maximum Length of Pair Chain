// Input: pairs = [[1,2],[7,8],[4,5]]
// Output: 3
// Explanation: The longest chain is [1,2] -> [4,5] -> [7,8].

class Solution {
public:
    int findLongestChain(vector<vector<int>>& pairs) {
        int size = pairs.size();
        
        sort(pairs.begin(), pairs.end());
        
        vector<int> dp(size+1);
        dp[0] = 0;
        dp[1] = 1;
        
        for (int i = 1; i < size; i++) {
            dp[i+1] = 1;
            
            for (int j = i-1; j >= 0; j--) {
                if (pairs[i][0] > pairs[j][1]) {
                    dp[i+1] = max(dp[i+1], dp[j+1] + 1);
                }
            }
        }
        
        return dp[size];
    }
};
