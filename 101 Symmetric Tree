/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    // For example, this binary tree [1,2,2,3,4,4,3] is symmetric:
    //     1
    //    / \
    //   2   2
    //  / \ / \
    // 3  4 4  3
    
    bool isSymmetricDFS(TreeNode *left, TreeNode *right) {
        if (!left && !right) return true;
        
        if ((!left && right) || (left && !right) || (left->val != right->val)) return false;
    
        return isSymmetricDFS(left->left, right->right) && isSymmetricDFS(left->right, right->left);
    }
    
    bool isSymmetric(TreeNode* root) {
        // symmetric: 对称的
        // 简单的写个递归
        if (!root) return true;
        return isSymmetricDFS(root->left, root->right);
    }
};
